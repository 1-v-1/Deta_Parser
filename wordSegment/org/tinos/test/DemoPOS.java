package org.tinos.test;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.tinos.engine.analysis.Analyzer;
import org.tinos.engine.analysis.imp.CogsBinaryForestAnalyzerImp;
import static java.lang.System.*;

public class DemoPOS {
	public static void main(String[] args) throws IOException {
		Analyzer analyzer = new CogsBinaryForestAnalyzerImp();
		analyzer.init();
		Map<String, String> nlp = analyzer.getPosCnToCn();
		List<String> sets = new ArrayList<>();
		String[] ss = new String[30];
		String[] ss1 = new String[30];
		ss[0] = "结婚的和尚未结婚的等和尚未成家之人都和尚未"
				+ "成佛的和尚未必一样和尚未来的和尚未和从容"
				+ "易开始念经那和尚未进行告别不显得从容易知"
				+ "和尚未结婚的施主一样其实都不和尚未成佛的"
				+ "心态有关因为这和尚未成佛";
		ss[1] = "沿海南方向逃跑";
		ss[2] = "他说的确实在理";
		ss[3] = "杨过和小龙女重逢了";
		ss[4] = "结婚的和尚未结婚的";
		ss[5] = "提高产品质量";
		ss[6] = "中外科学名著";
		ss[7] = "北京大学生前来应聘";
		ss[8] = "为人民服务";
		ss[9] = "独立自主和平等互利的原则";
		ss[10] = "为人民办公益";
		ss[11] = "这事的确定不下来";
		ss[12] = "这扇门把手坏了";
		ss[13] = "他把手抬起来";
		ss[14] = "学生会宣传部";
		ss[15] = "学生会主动完成作业";
		ss[16] = "学生会游戏";
		ss[17] = "研究生活水平";
		ss[18] = "中国有企业";
		ss[19] = "我爱美国手球";
		ss[20] = "中国喜欢狗";
		ss[21] = "中国热爱狗";
		ss[22] = "王军虎去广州了";
		ss[23] = "王军虎头虎脑的";
		ss[24] = "将军任命了一名中将";
		ss[25] = "产量三年中将增长两倍";
		ss[26] = "、 益母 、结婚益母";
		ss[27] = "我来到北京清华大学";
		ss1[0] = "结婚 的 和 尚未 结婚 的 等 和 尚未 成家 之 人 都 和 尚未"
				+ " 成佛 的 和尚 未必 一样 和 尚未 来 的 和尚 未 和 从 容"
				+ "易 开始 念经 那 和尚 未 进行 告别 不 显得 从容 易 知 "
				+ "和 尚未 结婚 的 施主 一样 其实 都 不 和 尚未 成佛 的"
				+ " 心态 有关 因为 这 和尚 未 成佛";
		ss1[1] = "沿 海 南 方向 逃跑";
		ss1[2] = "他 说 的 确实 在理";
		ss1[3] = "杨过 和 小龙女 离婚 了";
		ss1[4] = "结婚 的 和 尚未 结婚 的";
		ss1[5] = "提高 产品 质量";
		ss1[6] = "中外 科学 名著";
		ss1[7] = "北京 大学生 前 来 应聘";
		ss1[8] = "为 人民 服务";
		ss1[9] = "独立 自主 和 平等 互利 的 原则";
		ss1[10] = "为 人民 办公益";
		ss1[11] = "这事 的确 定 不 下来";
		ss1[12] = "这 扇 门 把手 坏 了";
		ss1[13] = "他 把 手 抬 起来";
		ss1[14] = "学生会 宣传 部";
		ss1[15] = "学生 会 主动 完成 作业";
		ss1[16] = "学生会 游戏";
		ss1[17] = "研究 生活 水平";
		ss1[18] = "中国 有 企业";
		ss1[19] = "我 爱 美国 手球";
		ss1[20] = "中国 喜欢 狗";
		ss1[21] = "中国 热爱 狗";
		ss1[22] = "王军虎 去 广州 了";
		ss1[23] = "王军 虎头虎脑 的";
		ss1[24] = "将军 任命 了 一名 中将";
		ss1[25] = "产量 三 年 中 将 增长 两倍";
		ss1[26] = "、 益母 、结婚益母";
		ss1[27] = "我 来到 北京 清华 大学";
		ss[28] = "别把手放在我的肩膀上女干事每月经过下属的质量和服务";
		ss1[28] = "别 把 手 放在 我 的 肩膀 上 女 干事 每 月 经过 下属 的 质量 和 服务";
		ss[29] = "研究生命科学 研究生命令本科生 我从马上下来, 我马上下来北京大学生喝进口红酒,  在北京大学生活区喝进口红酒,  从小学电脑 , 从小学毕业 , 美军中将竟公然说 , 新建地铁中将禁止商业摊点"
				+ "这块地面积还真不小地面积了厚厚的雪让我们以爱心和平等来对待动物阿美首脑会议将讨论巴以和平等问题锌合金把手的相关求购信息别把手伸进别人的口袋里将信息技术应用于"
				+ "教学实践信息技术应用于教学中的哪个方面 , 上级解除了他的职务 , 方程的解除了零以外还有… . 我们一起去故宫.  一起恶性交通事故  .我不想吃东西 , 你就不想想各国有企业相继倒闭 各国有各国的困难"
				+ "老人家身体不错,  老人家中很干净 . 和服务必归还 . 技术和服务他站起身.  他起身去北京 . 问题的确定 . 这的确定不下来  .结合成分为人民工作  .中国产品质量原子结合成分子时  部分居民生活水平治理  .解放大道路面积水  "
				+ "这样的人才能经受住考验 , 他俩儿谈恋爱是从头年元月开始的,  在这些企业中国有企业有十个结婚的和尚未结婚的";
		ss1[29] = "研究 生命 科学 研究生 命令 本科生  我 从 马上 下来 我 马上 下来 北京 大学生 喝 进口 红酒 在 北京 大学 生活 区 喝 进口 红酒 从 小 学 电脑 从 小学 毕业 美 军 中将 竟 公然 说 新 建 地铁 中将 禁止 商业 摊点"
				+ " 这块 地 面积 还 真 不 小 地面 积了 厚 厚 的 雪 让我们 以 爱心 和 平等 来 对待 动物 阿 美 首脑 会议 将 讨论 巴 以 和平 等 问题 锌 合金 把手 的 相关 求购 信息 别 把 手 伸进 别人 的 口袋 里 将 信息 技术 应用 于"
				+ "教学 实践 信息 技术 应用 于 教学 中 的 哪个 方面 上级 解除 了 他 的 职务 方程 的 解 除了 零 以外 还有 …我们 一起 去 故宫 一起 恶性 交通 事故 我 不想 吃 东西 你 就 不 想 想 各 国有 企业 相继 倒闭 各国 有 各国 的 困难"
				+ "老人家 身体 不错 老人 家中 很 干净 和服 务必 归还 技术 和 服务 他 站 起 身 他 起身 去 北京 问题 的 确定 这 的确 定 不下来 结合 成分 为 人民 工作 中国 产品 质量 原子 结合 成 分子 时 部分 居民 生活 水平 治理 解放 大道 路面 积水"
				+ "这样 的 人 才能 经受 住 考验 他 俩 儿 谈 恋爱 是 从 头年 元月 开始 的 在 这些 企业 中 国有 企业 有 十个 结婚 的 和 尚未 结婚的";
		for (int i = 0; i < ss.length; i++) {
			System.out.println("超级变态复杂病句-->" + ss[i]);
			sets = analyzer.parserString(ss[i].replace(" ", ""));//词性分析
			out.print("分析处理真实结果-->");
			for (int j = 0; j < sets.size(); j++) {
				if (!sets.get(j).replaceAll("\\s+", "").equals("")) {
					out.print(sets.get(j) + " ");
				}
			}
			out.println();
			out.println("期望得到分词效果-->" + ss1[i]);
			for (int k = 0; k < sets.size(); k++) {
				if (!sets.get(k).replaceAll("\\s+", "").equals("")) {
					nlp.get(sets.get(k));
					out.println(sets.get(k) + "/" + nlp.get(sets.get(k)) + "  ");
				}
			}
			out.println("");
		}
	}
}